name: Build App with Cache
on:
  workflow_dispatch:
    inputs:
      version:
        description: "tag version"
        required: true
        default: "V0.0.1"
      is_pre_release:
        description: "pre-release or release, if true, is pre-release"
        required: true
        type: boolean
        default: true


jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: install node
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        target: x86_64-apple-darwin

    - name: rust cache restore
      uses: actions/cache/restore@v3
      id: cache_store
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          src-tauri/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: build for MacOS
      run: |
        rustup target add aarch64-apple-darwin
        npm run build:all-unix

    - name: Upload files
      # arg info: https://github.com/ncipollo/release-action#release-action
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        prerelease: ${{ inputs.is_pre_release }}
        artifacts: "output/*/*.*"
        tag: ${{ inputs.version }}
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: rust cache store
      uses: actions/cache/save@v3
      if: steps.cache_store.outputs.cache-hit != 'true'
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          src-tauri/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
